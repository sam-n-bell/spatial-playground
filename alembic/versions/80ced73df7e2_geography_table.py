"""geography table

Revision ID: 80ced73df7e2
Revises: 
Create Date: 2023-10-25 00:15:42.842202

"""
import geoalchemy2
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '80ced73df7e2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('custom_geography',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('geography', geoalchemy2.types.Geography(geometry_type='POLYGON', from_text='ST_GeogFromText', name='geography', nullable=False), nullable=False),
    sa.Column('input_srid', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['input_srid'], ['spatial_ref_sys.srid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # already exists?
    # op.create_index('idx_custom_geography_geography', 'custom_geography', ['geography'], unique=False, postgresql_using='gist')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_custom_geography_geography', table_name='custom_geography', postgresql_using='gist')
    op.drop_table('custom_geography')
    # ### end Alembic commands ###
